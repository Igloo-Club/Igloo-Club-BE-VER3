name: Docker build & push

on:
  push:
    branches: [ "develop" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "develop" ]
    tags: [ "v*" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      -
        name: 저장소 Checkout
        uses: actions/checkout@v4
      -
        name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      -
        name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - 
        name: 디렉토리 생성
        run: mkdir -p ./src/main/resources/
      - 
        name: 비어있는 yml 파일 생성
        run: |
          touch ./src/main/resources/application.yml
          touch ./src/main/resources/application-deploy.yml
      - 
        name: secrets에 있는 APPLICATION 내용을 yml 파일에 덮어쓰기
        run: |
          echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.yml
          echo "${{secrets.APPLICATION_DEPLOY}}" > ./src/main/resources/application-deploy.yml
      -
        name: yml 파일 업로드
        uses: actions/upload-artifact@v4
        with:
          name: application.yml files
          path: ./src/main/resources/
      -
        name: gradlew 실행권한 부여
        run: chmod +x gradlew
      -
        name: 스프링부트 애플리케이션 빌드
        run: ./gradlew clean build -x test
      -
        name: 도커 이미지 태그 저장
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v5
        with:
          images: ${{secrets.DOCKERHUB_IMAGE}}
          flavor: latest=true
          tags: type=semver,pattern={{version}}
      -
        name: 도커 빌드 셋업
        uses: docker/setup-buildx-action@v3
      -
        name: 도커 허브 로그인
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      -
        name: 도커 빌드 & 푸시
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{steps.docker_meta.outputs.tags}}
          labels: ${{steps.docker_meta.outputs.labels}}

          
